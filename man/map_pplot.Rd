% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_promise.R
\name{map_pplot}
\alias{map_pplot}
\title{Apply a function to each element of a vector and return a vector of plot "promises"}
\usage{
map_pplot(.x, .f, ...)
}
\arguments{
\item{.x}{a list or atomic vector (see \code{\link[purrr]{map}} for details)}

\item{.f}{a function, formula, or atomic vector that returns a plot object (see \code{\link[purrr]{map}} for details)}

\item{...}{additional arguments passed on to .f (see \code{\link[purrr]{map}} for details)}
}
\description{
Apply a function to each element of a vector and return a vector of plot "promises"
}
\details{
See \code{\link[purrr]{map}}
}
\examples{
\dontrun{
library(dplyr)
library(tidyr)
library(purrr)
library(rbokeh)
library(gapminder)

# nest gapminder data by country
by_country <- gapminder \%>\%
  group_by(country, continent) \%>\%
  nest()

# add in a plot column with map_plot
by_country <- by_country \%>\% mutate(
  panel = map_pplot(data,
    ~ figure(xlim = c(1948, 2011), ylim = c(10, 95), width = 300, tools = NULL) \%>\%
        ly_points(year, lifeExp, data = .x, hover = .x)
  ))

# look at one panel
by_country$panel[[1]]
get_ppanel(by_country, row = 1)

# plot it
trelliscope(by_country, "gapminder", nrow = 2, ncol = 7)
}
}
